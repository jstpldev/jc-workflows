# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on:  
  workflow_call:
    secrets:
      JF_URL:
        required: true
      JF_USER:
        required: true
      JF_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: build-maven
    continue-on-error: false
    env:
      # JFrog platform url (for example: https://acme.jfrog.io)
      JF_URL: ${{ secrets.JF_URL }}
      # Basic authentication credentials
      JF_USER: ${{ secrets.JF_USER }}
      JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}} 

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Run find-and-replace to remove / from branch
        uses: mad9000/actions-find-and-replace-string@1
        id: repobranchname
        with:
          source: "${{ github.event.repository.name }}::${{ steps.extract_branch.outputs.branch }}"
          find: '/'
          replace: '::'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
         echo "<settings><servers><server><id>snapshots</id><url>${JF_URL}/artifactory/maven-dev-local</url><username>${JF_USER}</username><password>${JF_PASSWORD}</password></server></servers></settings>" > ~/.m2/settings.xml
         mvn clean install -U

      - name: Set up Jfrog Cli  
        uses: jfrog/setup-jfrog-cli@v2

      - name: Publish
        env:
            SERVER_ID: art
            BUILD_NAME: ${{ steps.repobranchname.outputs.value }}
            BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          jfrog config add --user $JF_USER --password $JF_PASSWORD --artifactory-url $JF_URL/artifactory --interactive=false ${SERVER_ID}
          jfrog rt mvn-config --repo-deploy-releases maven-dev-local --repo-deploy-snapshots maven-dev-local --server-id-deploy ${SERVER_ID}
          jfrog rt mvn install package -f pom.xml -DskipTests -q --build-name "${BUILD_NAME}" --build-number $BUILD_NUMBER
          jfrog rt bp "${BUILD_NAME}" $BUILD_NUMBER --build-url "${BUILD_URL}" --server-id ${SERVER_ID}
